"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _lodash() {
  const data = require("lodash");

  _lodash = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = _interopRequireDefault(require("path"));

  _path = function () {
    return data;
  };

  return data;
}

var _linkAssets = _interopRequireDefault(require("./linkAssets"));

var _linkDependency = _interopRequireDefault(require("./linkDependency"));

function _cliTools() {
  const data = require("@react-native-community/cli-tools");

  _cliTools = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const dedupeAssets = assets => (0, _lodash().uniqBy)(assets, asset => _path().default.basename(asset));

async function linkAll(config) {
  const projectAssets = config.assets;
  const assets = dedupeAssets(Object.keys(config.dependencies).reduce((acc, dependency) => acc.concat(config.dependencies[dependency].assets), projectAssets));

  try {
    Object.keys(config.dependencies).forEach(async key => {
      const dependency = config.dependencies[key];

      if (dependency.hooks.prelink) {
        await dependency.hooks.prelink();
      }

      await (0, _linkDependency.default)(config.platforms, config.project, dependency);

      if (dependency.hooks.postlink) {
        await dependency.hooks.postlink();
      }
    });
    await (0, _linkAssets.default)(config.platforms, config.project, assets);
  } catch (error) {
    throw new (_cliTools().CLIError)(`Something went wrong while linking. Reason: ${error.message}`, error);
  }
}

var _default = linkAll;
exports.default = _default;